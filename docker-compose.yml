version: "3.9"

services:
  database:
    image: postgres:latest
    container_name: database
    restart: always
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      POSTGRES_DB: petcare
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
    volumes:
      - ./db:/var/lib/postgresql/data
    networks:
      - petcareNetwork

  petcare:
    image: 'petcare:latest'
    build:
      context: .
      dockerfile: Dockerfile
    container_name: petcare
    restart: on-failure
    env_file:
      - .env
    ports:
      - "8080:8080"
    environment:
      - server.port=8080
      - spring.datasource.username=${DATABASE_USERNAME}
      - spring.datasource.password=${DATABASE_PASSWORD}
      - spring.datasource.url=jdbc:postgresql://database:5432/petcare
      - spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
      - spring.jpa.hibernate.ddl-auto=update
    depends_on:
      - database
    networks:
      - petcareNetwork

  prometheus:
    image: prom/prometheus:v2.48.1
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - petcareNetwork

  grafana:
    image: grafana/grafana-oss:8.5.2
    pull_policy: always
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_SERVER_DOMAIN=localhost
    networks:
      - petcareNetwork

networks:
  petcareNetwork: